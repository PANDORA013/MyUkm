name: Deploy MyUKM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: |
          ~/.composer/cache
          node_modules
        key: ${{ runner.os }}-deps-${{ hashFiles('composer.lock') }}-${{ hashFiles('package-lock.json') }}
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, ctype, fileinfo, openssl, PDO, tokenizer, xml, gd, pdo_mysql
    - run: |
        composer install --no-interaction --prefer-dist --optimize-autoloader
        npm ci && npm run prod
    - run: |
        cp .env.example .env
        php artisan key:generate
        php artisan migrate --seed
        php artisan test
    - run: composer audit --no-interaction
    # Notifikasi Slack dinonaktifkan sementara
    # - uses: rtCamp/action-slack-notify@v2
    #   if: always()
    #   env:
    #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    #     SLACK_MESSAGE: "Deploy MyUKM ${{ job.status }} ðŸš€"
    - name: Deploy to Production
      if: github.ref == 'refs/heads/main'
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        PROJECT_PATH: ${{ secrets.PROJECT_PATH || '/var/www/myukm' }}
      run: |
        echo "ðŸš€ Memulai deploy ke production..."
        
        # Buat SSH config
        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        
        # Deploy via SSH
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key $SSH_USER@$SSH_HOST "
          cd $PROJECT_PATH
          git pull origin main
          composer install --no-dev --optimize-autoloader
          npm install --production
          npm run prod
          php artisan migrate --force
          php artisan optimize:clear
          php artisan queue:restart
          
          # Restart web server
          sudo systemctl restart apache2 || sudo systemctl restart nginx
          
          echo 'âœ… Deploy berhasil!'
        "
        
        # Hapus SSH key
        rm -f ~/.ssh/deploy_key
