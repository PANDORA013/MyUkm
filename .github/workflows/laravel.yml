name: Laravel Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: myukm_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql, gd
        coverage: none

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Configure Environment for Testing
      run: |
        # Configure database for testing
        sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env
        sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
        sed -i 's/DB_DATABASE=.*/DB_DATABASE=myukm_test/' .env
        sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
        sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=password/' .env
        
        # Configure broadcast driver to prevent null argument errors
        echo "BROADCAST_DRIVER=log" >> .env
        
        # Add Reverb configuration to prevent null errors
        echo "REVERB_APP_ID=test-app" >> .env
        echo "REVERB_APP_KEY=test-key" >> .env
        echo "REVERB_APP_SECRET=test-secret" >> .env
        echo "REVERB_HOST=127.0.0.1" >> .env
        echo "REVERB_PORT=8080" >> .env
        echo "REVERB_SCHEME=http" >> .env
        
        # Add Ably configuration
        echo "ABLY_KEY=" >> .env
        
        # Set CI environment variables to skip browser tests
        echo "CI=true" >> .env
        echo "GITHUB_ACTIONS=true" >> .env
        
        # Configure other services for testing
        echo "MAIL_MAILER=log" >> .env
        echo "QUEUE_CONNECTION=sync" >> .env
        echo "SESSION_DRIVER=array" >> .env
        echo "CACHE_DRIVER=array" >> .env

    - name: Install dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate --force

    - name: Directory Permissions
      run: chmod -R 755 storage bootstrap/cache

    - name: Clear caches
      run: |
        php artisan config:clear
        php artisan cache:clear
        php artisan view:clear
        php artisan route:clear

    - name: Run database migrations
      run: php artisan migrate --force

    - name: Execute Unit Tests with detailed output
      run: |
        echo "::group::Unit Tests"
        vendor/bin/phpunit --testsuite=Unit --debug --log-junit=results/unit-tests.xml
        echo "::endgroup::"
      continue-on-error: true

    - name: Execute Feature Tests with detailed output
      run: |
        echo "::group::Feature Tests"
        vendor/bin/phpunit --testsuite=Feature --debug --log-junit=results/feature-tests.xml
        echo "::endgroup::"
      continue-on-error: true

    - name: Execute All Non-Browser Tests with detailed output
      run: |
        echo "::group::All Tests (Excluding Browser)"
        # Run all tests except Browser tests to avoid ChromeDriver dependency
        vendor/bin/phpunit --exclude-group browser --debug --log-junit=results/all-tests.xml
        echo "::endgroup::"
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: results/

    - name: Display Test Summary
      if: always()
      run: |
        echo "::notice title=Test Summary::Check the uploaded artifacts for detailed test results"
        if [ -f results/unit-tests.xml ]; then
          echo "Unit test results available in artifacts"
        fi
        if [ -f results/feature-tests.xml ]; then
          echo "Feature test results available in artifacts"
        fi
